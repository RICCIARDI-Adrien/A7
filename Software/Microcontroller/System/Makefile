BINARY_NAME = System.lpp
# System headers are automatically included by default MAIN_MAKEFILE_C_COMPILER_FLAGS
# Set library output format
MAIN_MAKEFILE_C_COMPILER_FLAGS += --output=lpp
# Remove system library inclusion from flags or the compiler will try to open the file it must create before creating it
SYSTEM_C_COMPILER_FLAGS = $(subst $(MAIN_MAKEFILE_PATH_BINARIES)/System.lpp,,$(MAIN_MAKEFILE_C_COMPILER_FLAGS))

SOURCES = $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Display.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_External_EEPROM.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Flash.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Internal_EEPROM.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Interrupt.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Keyboard.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Random.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/System_Serial_Port.c

$(MAIN_MAKEFILE_PATH_BINARIES)/$(BINARY_NAME):
	$(MAIN_MAKEFILE_C_COMPILER) $(SYSTEM_C_COMPILER_FLAGS) $(SOURCES) -O$(BINARY_NAME)
	@cp $(MAIN_MAKEFILE_APPLICATION_PATH_OBJECTS)/$(BINARY_NAME) $(MAIN_MAKEFILE_PATH_BINARIES)

clean:
	rm -f $(MAIN_MAKEFILE_APPLICATION_PATH_OBJECTS)/* $(MAIN_MAKEFILE_PATH_BINARIES)/$(BINARY_NAME)

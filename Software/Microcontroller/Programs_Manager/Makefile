BINARY_NAME = Programs_Manager.hex
# Application relocation address in flash memory
APPLICATION_BASE_ADDRESS = 0x2000
# Classic MAIN_MAKEFILE_C_COMPILER_FLAGS can't be used because it contains the code base address redefinition
# -P option allows assembly files to be parsed by the C preprocessor
CCFLAGS = --chip=18F26K22 --objdir=$(MAIN_MAKEFILE_APPLICATION_PATH_OBJECTS) --outdir=$(MAIN_MAKEFILE_APPLICATION_PATH_OBJECTS) -I../System/Includes -I$(MAIN_MAKEFILE_APPLICATION_PATH_INCLUDES) $(MAIN_MAKEFILE_PATH_BINARIES)/System.lpp -DCONFIGURATION_APPLICATION_BASE_ADDRESS=$(APPLICATION_BASE_ADDRESS) -P

SOURCES = $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/File_System.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/Interrupt_Vector_Relocation.asm $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/Main.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/Menu.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/Menu_Delete_File.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/Menu_Download_File.c $(MAIN_MAKEFILE_APPLICATION_PATH_SOURCES)/Menu_Start_Program.c

$(MAIN_MAKEFILE_PATH_BINARIES)/$(BINARY_NAME): $(SOURCES)
	$(MAIN_MAKEFILE_C_COMPILER) $(CCFLAGS) $(SOURCES) -O$(BINARY_NAME)
	@cp $(MAIN_MAKEFILE_APPLICATION_PATH_OBJECTS)/$(BINARY_NAME) $(MAIN_MAKEFILE_PATH_BINARIES)

clean:
	rm -f $(MAIN_MAKEFILE_PATH_BINARIES)/$(BINARY_NAME)
